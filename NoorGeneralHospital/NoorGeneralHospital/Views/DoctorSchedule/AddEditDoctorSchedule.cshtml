@model NoorGeneralHospital.Models.InputDTO.DoctorScheduleInput

@{
    ViewBag.Title = "Create/Update";
}

<div class="row">
    <div class="col-lg-8 offset-lg-2">
        <h4 class="page-title">Add Schedule</h4>
    </div>
</div>
<div class="row">
    <div class="col-lg-8 offset-lg-2">
        @using (Html.BeginForm("SaveDoctorSchedule", "DoctorSchedule", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(x=> x.Id)
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Doctor Name</label>
                        @Html.DropDownListFor(x => Model.DoctorId, new SelectList(Model.GetDoctor(), "Value", "Text"), htmlAttributes: new { @class = "select" })
                        @Html.ValidationMessageFor(x => x.DoctorId, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Available Days</label>
                        @Html.ListBoxFor(x => Model.AvailableDays, new SelectList(Model.GetDay(), "Value", "Text"), htmlAttributes: new { @class = "select  field fontstyleOpenSans", @multiple = "multiple" })
                        @Html.ValidationMessageFor(x => x.AvailableDays, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Start Time</label>
                        <div class="time-icon">
                            @*@Html.TextBoxFor(s => s.StartTime, new { @class = "form-control", @id = "datetimepicker3" })*@
                            @Html.EditorFor(s => s.StartTime, new { htmlAttributes = new { @id = "StartTime", @class = "form-control timepicker" } })
                            @Html.ValidationMessageFor(x => x.StartTime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>End Time</label>
                        <div class="time-icon">
                            @Html.TextBoxFor(s => s.EndTime, new { @class = "form-control", @id = "datetimepicker4" })
                            @Html.ValidationMessageFor(x => x.EndTime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label>Description</label>
                @Html.TextAreaFor(s => s.Description, new { @class = "form-control", @cols = "30", @rows = "4" })
                @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label class="display-block">Doctor Status</label>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(s => s.IsActive, true, new { @class = "form-check-input", @name = "status", @checked = true })
                    <label class="form-check-label">
                        Active
                    </label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(s => s.IsActive, false, new { @class = "form-check-input", @name = "status" })
                    <label class="form-check-label">
                        Inactive
                    </label>
                </div>
            </div>
            <div class="m-t-20 text-center">
                <button class="btn btn-primary submit-btn">Create Schedule</button>
            </div>
        }
    </div>
</div>

<script src="~/Content/assets/js/jquery.validate.min.js"></script>
<script src="~/Content/assets/js/jquery.validate.unobtrusive.min.js"></script>
<script>
    $(document).ready(function () {
        //For Time Picker
        $('.timepicker').datetimepicker({
            format: 'LT'
        });
        $('#datetimepicker4').datetimepicker({
            format: 'LT'
        });

        //For Searchable Dropdown
        $('.select').select2(
            { width: '100%' }
        );

        //For Date Picker
        //$('#DOB').datetimepicker({
        //    format: 'DD/MM/YYYY',
        //    minDate: moment().millisecond(0).second(0).minute(0).hour(0),
        //    clear: false
        //});

        //Begin Form Insert
        $('form').submit(function (e) {
            e.preventDefault();
            var isValid = $(this).validate().form();
            if (!isValid) return false;
            else {
                $.ajax({
                    url: '/DoctorSchedule/SaveDoctorSchedule',
                    data: $(this).serialize(),
                    type: 'POST',
                    beforeSend: function () {
                    },
                    complete: function () {
                    },
                    success: function (res) {
                        if (res.Code == "1") {
                            toastr.success(res.Message, 'success!');
                            _DoctorScheduleDetail();
                        }
                        else if (res.Code == "2")
                        {
                            toastr.warning(res.Message, 'warning!');
                        }
                        else {
                            toastr.error(res.Message, 'error!');
                        }
                    },
                    error: function (jqXHR, error, errorThrown) {
                        toastr.error('Sorry Try again', 'error!');
                    },
                });
            }
        });

    });
</script>